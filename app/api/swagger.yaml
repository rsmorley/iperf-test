---
swagger: "2.0"
info:
  description: "This REST api performs Iperf tests against a remote server (server\
    \ must be running the Iperf server)"
  version: "1.0.0"
  title: "Iperf Test API"
  contact:
    email: "morley.rs@gmail.com"
host: "virtserver.swaggerhub.com"
basePath: "/rsmorley/Iperf-tests/1.0.0"
tags:
- name: "public"
  description: "Publicly accessible APIs"
schemes:
  - https
paths:
  /tests:
    get:
      tags:
      - "public"
      summary: "returns running and completed Iperf tests"
      operationId: "getTests"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "tests"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IperfTest"
        400:
          description: "bad input parameter"
        500:
          description: "internal server error"
      x-swagger-router-controller: "Public"
    post:
      tags:
      - "public"
      summary: "initiate an Iperf test against the specified server"
      operationId: "createTest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CreatePayload"
      responses:
        201:
          description: "test initiated"
          schema:
            $ref: "#/definitions/IperfTest"
        400:
          description: "invalid input, object invalid"
        500:
          description: "internal server error"
      x-swagger-router-controller: "Public"
  /tests/{testId}:
    get:
      tags:
      - "public"
      summary: "get Iperf test details"
      operationId: "getTest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "testId"
        in: "path"
        description: "test ID"
        required: true
        type: "string"
      responses:
        200:
          description: "test details"
          schema:
            $ref: "#/definitions/IperfTest"
        404:
          description: "test not found"
        500:
          description: "internal server error"
      x-swagger-router-controller: "Public"
    delete:
      tags:
      - "public"
      summary: "delete an Iperf test"
      operationId: "deleteTest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "testId"
        in: "path"
        description: "test ID"
        required: true
        type: "string"
      responses:
        204:
          description: "test deleted"
        404:
          description: "test not found"
        500:
          description: "internal server error"
      x-swagger-router-controller: "Public"
definitions:
  CreatePayload:
    type: "object"
    required:
    - "port"
    - "server"
    - "type"
    properties:
      type:
        type: "string"
        enum:
        - "udp"
        - "tcp"
      server:
        type: "string"
        example: "10.0.1.128"
        description: "ipv4 address"
      port:
        type: "integer"
        example: 12345
  IperfTest:
    type: "object"
    required:
    - "id"
    - "port"
    - "server"
    - "status"
    properties:
      id:
        type: "string"
        format: "uuid"
        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
      status:
        type: "string"
        enum:
        - "completed"
        - "failed"
        - "running"
      server:
        type: "string"
        example: "10.0.1.128"
        description: "ipv4 address"
      port:
        type: "integer"
        example: 12345
      transferred:
        type: "string"
        example: "102 MBytes"
      throughput:
        type: "string"
        example: "84.5 Mbits/sec"
      jitter:
        type: "string"
        example: "0.492 ms"
      datagrams:
        type: "string"
        example: "0/  893 (0%)"
        description: "Lost/Total Datagrams"
      started:
        type: "string"
        format: "date-time"
        example: "2016-08-29T09:12:33.001Z"
      completed:
        type: "string"
        format: "date-time"
        example: "2016-08-29T09:12:43.001Z"
